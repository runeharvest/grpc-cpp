---
name: Build gRPC & Protobuf C++ (Windows)

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Chocolatey packages
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\Temp\chocolatey
            C:\ProgramData\chocolatey\lib
          key: choco-${{ runner.os }}-cmake-git
          restore-keys: |
            choco-${{ runner.os }}-

      - name: Install dependencies
        run: |
          choco install cmake git

      - name: Cache Protobuf source
        id: cache-protobuf-source
        uses: actions/cache@v4
        with:
          path: protobuf
          key: protobuf-source-v27.1-${{ runner.os }}

      - name: Clone Protobuf
        if: steps.cache-protobuf-source.outputs.cache-hit != 'true'
        run: |
          git clone --branch v27.1 `
            https://github.com/protocolbuffers/protobuf.git
          cd protobuf
          git submodule update --init --recursive

      - name: Cache Protobuf build
        id: cache-protobuf-build
        uses: actions/cache@v4
        with:
          path: |
            protobuf/build
            protobuf-install
          key: protobuf-build-v27.1-${{ runner.os }}-vs2022-${{ hashFiles('protobuf/CMakeLists.txt', 'protobuf/cmake/**') }}

      - name: Build Protobuf
        if: steps.cache-protobuf-build.outputs.cache-hit != 'true'
        run: |
          cd protobuf
          mkdir build
          cd build
          cmake .. -G "Visual Studio 17 2022" -A x64 `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INSTALL_PREFIX=$env:GITHUB_WORKSPACE\protobuf-install
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Cache gRPC source
        id: cache-grpc-source
        uses: actions/cache@v4
        with:
          path: grpc
          key: grpc-source-v1.74.0-${{ runner.os }}

      - name: Clone gRPC
        if: steps.cache-grpc-source.outputs.cache-hit != 'true'
        run: |
          git clone --branch v1.74.0 https://github.com/grpc/grpc.git
          cd grpc
          git submodule update --init --recursive

      - name: Cache gRPC build
        id: cache-grpc-build
        uses: actions/cache@v4
        with:
          path: |
            grpc/build
            grpc-install
          key: grpc-build-v1.74.0-${{ runner.os }}-vs2022-${{ hashFiles('grpc/CMakeLists.txt', 'grpc/cmake/**') }}-${{ hashFiles('protobuf-install/**') }}

      - name: Build gRPC
        if: steps.cache-grpc-build.outputs.cache-hit != 'true'
        run: |
          cd grpc
          mkdir build
          cd build
          $protobufDir = "$env:GITHUB_WORKSPACE\protobuf-install"
          cmake .. -G "Visual Studio 17 2022" -A x64 `
            -DCMAKE_BUILD_TYPE=Release `
            -DgRPC_PROTOBUF_PROVIDER=package `
            -DProtobuf_DIR=$protobufDir\lib\cmake\protobuf `
            -DCMAKE_INSTALL_PREFIX=$env:GITHUB_WORKSPACE\grpc-install
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Package libraries
        run: |
          Compress-Archive -Path `
            $env:GITHUB_WORKSPACE\grpc-install\*, `
            $env:GITHUB_WORKSPACE\protobuf-install\* `
            -DestinationPath grpc-protobuf-windows-${{ github.ref_name }}.zip

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: grpc-protobuf-windows-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact for workflow dispatch
        uses: actions/upload-artifact@v3
        if: github.event_name == 'workflow_dispatch'
        with:
          name: grpc-protobuf-windows
          path: grpc-protobuf-windows-${{ github.ref_name }}.zip
